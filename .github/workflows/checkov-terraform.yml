name: checkov-terraform

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  TERRAFORM_DIRECTORY: './src'

jobs:
  checkov-analysis:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Instalar o Checkov via pip
        run: |
          pip install checkov

      - name: Checar instalacao do Checkov
        run: |
          checkov
          checkov --help

      - name: Criar diretorio /results para armazenar os resultados gerados com o Checkov
        run: |
          mkdir results
  
      - name: Executar analise com o Checkov
        run: |
          checkov -d ${{ env.TERRAFORM_DIRECTORY }} -o cli -o github_failed_only --output-file-path ./results

      - name: Exibir arquivos gerados apos execucao do Checkov em /results
        run: |
          cd results
          ls
        if: always()

      - uses: dtinth/markdown-report-action@v1
        with:
          name: checkov-results
          title: Resultados Analise Checkov
          body-file: ./results/results_github_failed_only.md
        if: always()
        
      - name: Criar diretorio /results para armazenar os resultados gerados com o Checkov
        run: |
          mkdir results2
        if: always()

      - name: Executar analise com o Checkov
        run: |
          checkov -d ${{ env.TERRAFORM_DIRECTORY }} -o cli -o junitxml --output-file-path ./results2
        if: always()

      - name: Exibir arquivos gerados apos execucao do Checkov em /results2
        run: |
          cd results2
          ls
        if: always()

      - name: Test Reporter (exibir resultados)
        uses: dorny/test-reporter@v1.9.1
        with:
          name: checkov-analysis-junit
          path: ./results2/results_junixml.xml
        if: always()
